{"ast":null,"code":"var _jsxFileName = \"/mnt/c/DH/2 ano/DH-Especializacao-FrontEnd/FRONTEND/ctd-esp-front2-aula13-base-main/src/components/cards/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // CSS-in-JS\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Character = () => {\n  _s();\n\n  const [character, setCharacter] = useState([]);\n  useEffect(() => {\n    const fetchCharacter = () => fetch(`https://rickandmortyapi.com/api/character`).then(response => response.json()).then(character => {\n      setCharacter(character.results);\n    });\n\n    fetchCharacter();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Alguns personagens da s\\xE9rie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: character.map(data => {\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: data.image,\n            alt: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: data.gender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Character, \"y+oqPx3TvSl7pWAHUkjcnDIqOCo=\");\n\n_c = Character;\nexport default Character;\n\nvar _c;\n\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"sources":["/mnt/c/DH/2 ano/DH-Especializacao-FrontEnd/FRONTEND/ctd-esp-front2-aula13-base-main/src/components/cards/index.tsx"],"names":["React","useState","useEffect","Character","character","setCharacter","fetchCharacter","fetch","then","response","json","results","map","data","image","name","gender","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;;;;AASA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,cAAc,GAAG,MACrBC,KAAK,CAAE,2CAAF,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESJ,SAAD,IAAe;AACnBC,MAAAA,YAAY,CAACD,SAAS,CAACO,OAAX,CAAZ;AACD,KAJH,CADF;;AAMAL,IAAAA,cAAc;AACf,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGF,SAAS,CAACQ,GAAV,CAAeC,IAAD,IAA0B;AACvC,4BACE;AAAA,kCACE;AAAK,YAAA,GAAG,EAAEA,IAAI,CAACC,KAAf;AAAsB,YAAA,GAAG,EAAED,IAAI,CAACE;AAAhC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,oCACE;AAAA,wBAAKF,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAcH,IAAI,CAACI,EAAnB;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAkBD,CA/BD;;GAAMd,S;;KAAAA,S;AAiCN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\n// CSS-in-JS\r\n\r\ninterface CharacterProps {\r\n  id: number;\r\n  image: string;\r\n  name: string;\r\n  gender: string;\r\n}\r\n\r\nconst Character = () => {\r\n  const [character, setCharacter] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCharacter = () =>\r\n      fetch(`https://rickandmortyapi.com/api/character`)\r\n        .then((response) => response.json())\r\n        .then((character) => {\r\n          setCharacter(character.results);\r\n        });\r\n    fetchCharacter();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2>Alguns personagens da sÃ©rie</h2>\r\n      <section>\r\n        {character.map((data: CharacterProps) => {\r\n          return (\r\n            <article key={data.id}>\r\n              <img src={data.image} alt={data.name} />\r\n              <div>\r\n                <h3>{data.name}</h3>\r\n                <h3>{data.gender}</h3>\r\n              </div>\r\n            </article>\r\n          );\r\n        })}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Character;\r\n"]},"metadata":{},"sourceType":"module"}